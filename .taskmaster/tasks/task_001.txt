# Task ID: 1
# Title: Project Setup with Next.js, Clerk, and Supabase
# Status: done
# Dependencies: None
# Priority: high
# Description: Initialize the project repository with Next.js, configure Clerk for authentication, and set up Supabase for storage and database.
# Details:
1. Create a new Next.js project using the App Router
2. Install and configure Clerk for authentication
   - Set up sign-in, sign-up, and user profile pages
   - Configure Clerk webhooks to sync user data with Supabase
3. Set up Supabase project
   - Configure storage buckets for original images and processed results
   - Set up bucket policies for secure access
   - Configure auto-purge rules for 30-day deletion
4. Install and configure Drizzle ORM
   - Set up database schema for users, credits, and jobs tables
   - Create initial migration
5. Configure environment variables and deployment settings for Vercel

# Test Strategy:
1. Verify Clerk authentication flow works (sign up, sign in, sign out)
2. Test Supabase connection and basic CRUD operations
3. Confirm proper bucket access permissions
4. Validate database schema and migrations
5. Ensure development and production environments are properly configured

# Subtasks:
## 1. Project initialization and core dependencies [done]
### Dependencies: None
### Description: Set up the Next.js project with the name 'virtual-staging-saas' and add core dependencies
### Details:


## 2. Add core dependencies [done]
### Dependencies: None
### Description: Install replicate, openai, and @supabase/supabase-js packages
### Details:


## 3. Database schema creation [done]
### Dependencies: None
### Description: Create comprehensive database schema including users, credits, creditTransactions, and jobs tables
### Details:


## 4. Generate database migration [done]
### Dependencies: None
### Description: Successfully generate the initial database migration (0001_stale_dazzler.sql)
### Details:


## 5. Supabase client configuration [done]
### Dependencies: None
### Description: Set up Supabase client with storage utilities for image handling
### Details:


## 6. Replicate API client setup [done]
### Dependencies: None
### Description: Create Replicate API client with model integrations for AI processing
### Details:


## 7. Constants file creation [done]
### Dependencies: None
### Description: Create comprehensive constants file for styles, credits, and limits
### Details:


## 8. Credit management service [done]
### Dependencies: None
### Description: Implement credit management service with transaction handling
### Details:


## 9. Create Clerk webhook handler [done]
### Dependencies: None
### Description: Implement webhook handler to sync Clerk user data with Supabase database
### Details:


## 10. Set up API routes [done]
### Dependencies: None
### Description: Create API routes for core functionality including image processing and credit management
### Details:


## 11. Test local development environment [done]
### Dependencies: None
### Description: Verify all components work together in the local development environment
### Details:


