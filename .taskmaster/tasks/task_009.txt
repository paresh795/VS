# Task ID: 9
# Title: Implement Download with MLS Ribbon Option
# Status: pending
# Dependencies: 6
# Priority: medium
# Description: Create the download functionality with optional MLS ribbon overlay for the final staged images.
# Details:
1. Create MLS ribbon component:
   ```typescript
   // components/MLSRibbon.tsx
   export function addMLSRibbon(imageUrl) {
     return new Promise(async (resolve) => {
       const image = new Image();
       image.crossOrigin = 'Anonymous';
       image.onload = () => {
         const canvas = document.createElement('canvas');
         canvas.width = image.width;
         canvas.height = image.height;
         const ctx = canvas.getContext('2d');
         
         // Draw original image
         ctx.drawImage(image, 0, 0);
         
         // Draw ribbon
         ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';
         ctx.fillRect(0, image.height - 40, image.width, 40);
         
         // Add text
         ctx.fillStyle = 'white';
         ctx.font = 'bold 20px Arial';
         ctx.textAlign = 'center';
         ctx.fillText('Virtually Staged', image.width / 2, image.height - 15);
         
         // Convert to blob and resolve
         canvas.toBlob(blob => {
           resolve(URL.createObjectURL(blob));
         }, 'image/jpeg', 0.95);
       };
       image.src = imageUrl;
     });
   }
   ```
2. Create download API route:
   ```typescript
   // pages/api/download.ts
   export default async function handler(req, res) {
     const { user } = await getAuth(req);
     if (!user) return res.status(401).json({ error: 'Unauthorized' });
     
     const { imageUrl, addRibbon = false } = req.body;
     
     // Get image from Supabase or Replicate
     const imageResponse = await fetch(getPublicUrl(imageUrl));
     const imageBuffer = await imageResponse.arrayBuffer();
     
     // Apply MLS ribbon if requested
     let finalImageBuffer = imageBuffer;
     if (addRibbon) {
       finalImageBuffer = await applyMLSRibbon(imageBuffer);
     }
     
     // Set appropriate headers for download
     res.setHeader('Content-Disposition', 'attachment; filename="staged-image.jpg"');
     res.setHeader('Content-Type', 'image/jpeg');
     
     return res.send(Buffer.from(finalImageBuffer));
   }
   ```
3. Implement download UI
   - Add download button to staged images
   - Include toggle for MLS ribbon
   - Show download progress indicator
4. Implement client-side ribbon preview

# Test Strategy:
1. Test download functionality with and without ribbon
2. Verify ribbon appearance and text
3. Test with various image sizes and aspect ratios
4. Verify proper content type and disposition headers
5. Test download progress indicator
6. Verify ribbon toggle functionality
